 <script id="loggedin-template" type="text/x-handlebars-template">
    <h1>Logged in as </h1>
    <img id="avatar" width="200" src="" />
    <dl>
     <dt>Display name</dt><dd></dd>
     <dt>Username</dt><dd></dd>
     <dt>Email</dt><dd></dd>
     <dt>Spotify URI</dt><dd><a href=""></a></dd>
     <dt>Link</dt><dd><a href=""></a></dd>
     <dt>Profile Image</dt><dd></dd>
    </dl>
    <p><a href="/">Log in again</a></p>
 </script>

 <script src="https://sdk.scdn.co/spotify-player.js"></script>

 <script>
window.onSpotifyWebPlaybackSDKReady = () => {
  const token = 'BQCmAW4ufz_OSU3g80nS-dUPzkQ55yD5gdCBv2S75Ym5_ppB_qC45sOJ67UUnk643ulBGj8inmsi8Avk5Yg8N21ImcP88GstfQq0C9nYto3kQybYORY-GmHBrN17U0bc5EWc9dY2f01xpdPdRfzK3NIYCcNw6uPTpeuwaofUHwC0Tre0SE0';
  const player = new Spotify.Player({
    name: 'Web Playback SDK Quick Start Player',
    getOAuthToken: cb => { cb(token); }
  });

  // Error handling
  player.addListener('initialization_error', ({ message }) => { console.error(message); });
  player.addListener('authentication_error', ({ message }) => { console.error(message); });
  player.addListener('account_error', ({ message }) => { console.error(message); });
  player.addListener('playback_error', ({ message }) => { console.error(message); });

  // Playback status updates
  player.addListener('player_state_changed', state => { console.log(state); });

  // Ready
  player.addListener('ready', ({ device_id }) => {
    console.log('Ready with Device ID', device_id);
  });

  // Not Ready
  player.addListener('not_ready', ({ device_id }) => {
    console.log('Device ID has gone offline', device_id);
  });

  // Connect to the player!
  player.connect();


  player.getCurrentState().then(state => {
  if (!state) {
    console.error('User is not playing music through the Web Playback SDK');
    return;
  }

  let {
    current_track,
    next_tracks: [next_track]
  } = state.track_window;

  console.log('Currently Playing', current_track);
  console.log('Playing Next', next_track);
});





};
</script>